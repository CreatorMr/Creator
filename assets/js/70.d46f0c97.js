(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{606:function(n,t,a){"use strict";a.r(t);var s=a(4),e=Object(s.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[n._v("#")]),n._v(" javascript")]),n._v(" "),a("p",[n._v("1、call原理解析\n2、apply原理解析\n3、bind原理解析\n4、new 原理解析\n5、原型链和闭包\n6、执行上下文\n7、作用域\n8、模块演进历史CommonJs、AMD、CMD。ES6模块")]),n._v(" "),a("h3",{attrs:{id:"es6-es7语法和原理实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-es7语法和原理实现"}},[n._v("#")]),n._v(" ES6/ES7语法和原理实现")]),n._v(" "),a("p",[n._v("ES6\n1、常量\n1）let、const、块级作用域、\n2）global、顶层对象属性\n2、解构\n1）数组的解构赋值\n2）对象的解构赋值\n3）字符串的解构赋值\n4）数值和布尔的解构赋值\n5）函数参数的解构赋值\n6）圆括号问题\n7）用途\n3、字符串扩展(模版字符串)\n1）codePointAt()、String.fromCodePoint()\n2)字符串的遍历器接口\n3)at()、normalize()、includes()、startsWith()、endsWith()、repeat()、padStart()、padEnd()\n4)模版字符串、标签模版\n4、展开操作符...\n5、函数扩展\n1）默认参数、rest\n2）剪头函数\n3）绑定this\n4）尾调用优化\n6、对象扩展\n7、数组新方法\n8、类和继承\n9、生成器\n10、迭代器\n11、集合set、map\n12、Module\nES7\n1、includes\n2、 指数操作符\n原理\n1、类的实现原理")]),n._v(" "),a("h3",{attrs:{id:"promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[n._v("#")]),n._v(" Promise")]),n._v(" "),a("p",[n._v("1、promise设计模式原理\n2、在ES6中的应用\n3、手写promise\n4、手写符合promise/A+规范类库\n5、promise例题分析")]),n._v(" "),a("h3",{attrs:{id:"异步发展过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#异步发展过程"}},[n._v("#")]),n._v(" 异步发展过程")]),n._v(" "),a("p",[n._v("5种异步流控制\n1、callback\n2、promise\n3、generator\n4、co\n5、async/await\n6、async/await实现原理\nasync函数的实现原理：就是将Generator函数和自动执行器，包装在一个函数里。")])])}),[],!1,null,null,null);t.default=e.exports}}]);